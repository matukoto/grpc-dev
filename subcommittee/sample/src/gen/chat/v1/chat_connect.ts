// proto3 で記述する

// @generated by protoc-gen-connect-es v0.8.6 with parameter "target=ts"
// @generated from file chat/v1/chat.proto (package chat.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

// package は、ディレクトリ構造と同じにするのが一般的

import { SayRequest, SayResponse } from "./chat_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * *
 * サービスの定義
 * ここでは、Say という RPC を定義している
 * Say は、SayRequest を受け取って SayResponse を返す
 *
 * @generated from service chat.v1.ChatService
 */
export const ChatService = {
  typeName: "chat.v1.ChatService",
  methods: {
    /**
     * stream は、ストリーミング RPC を表す
     * SayRequest の前に stream をつけることで、ストリーミング RPC になる
     * Request がストリーミングなので、クライアントから複数の Request を受け取ることができる
     * 例えば大きい画像を送るときに、画像を分割して送ることができる
     *
     * @generated from rpc chat.v1.ChatService.Say
     */
    say: {
      name: "Say",
      I: SayRequest,
      O: SayResponse,
      kind: MethodKind.ClientStreaming,
    },
  }
} as const;

